# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-12-10 14:10
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models

from slugify import slugify


# TODO remove
def _gen_slug(apps, title, try_count=0):
    TopicClass = apps.get_model('djeddit', 'Topic')
    if try_count != 0:
        slug = slugify("{} {}".format(title, try_count), to_lower=True, max_length=180)
    else:
        slug = slugify(title, to_lower=True, max_length=180)
    # try fo find existing Thread
    try:
        TopicClass.objects.get(slug=slug)
    except TopicClass.DoesNotExist:
        return slug
    # if topic is exist
    try_count += 1
    return _gen_slug(title, try_count)


def generate_slug_for_topic(apps, schema_editor):
    TopicClass = apps.get_model('djeddit', 'Topic')
    for topic in TopicClass.objects.all():
        topic.slug = _gen_slug(apps, topic.title)
        topic.save()


class Migration(migrations.Migration):

    dependencies = [
        ('djeddit', '0007_auto_20180830_1820'),
    ]

    operations = [
        migrations.AddField(
            model_name='topic',
            name='slug',
            field=models.SlugField(max_length=200, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='topic',
            name='title',
            field=models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')]),
        ),
        migrations.RunPython(generate_slug_for_topic),
    ]
